on: [push, pull_request]

name: Continuous integration

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - "1.70"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo check --features "arc,tinyset"

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test --all-features
  docsrs:
    name: Generate docs.rs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - nightly
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo doc --all-features
        env:
          RUSTFLAGS: --cfg docsrs
          RUSTDOCFLAGS: --cfg docsrs -Dwarnings
  msrv:
    name: Minimum supported rust version
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - "1.70"
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust }}
      - run: cargo test
  miri-test:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: dtolnay/rust-toolchain@stable
          with:
            toolchain: nightly
            components: miri
        - name: miri test normal_intern
          run: cargo miri test normal_intern
        ## Disabling miri test on arcintern for now, since dashmap fails miri.
        # - name: miri test arcintern
        #   run: MIRIFLAGS=-Zmiri-disable-isolation cargo miri test --features arc arcintern

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          override: true
      - run: cargo test --features arc,arena,tinyset --no-fail-fast
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-C instrument-coverage -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off'
          RUSTDOCFLAGS: '--C instrument-coverage -Ccodegen-units=1 -Clink-dead-code -Coverflow-checks=off'
      - name: Gather coverage data
        id: coverage
        uses: droundy/grcov@master
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ${{ steps.coverage.outputs.report }}
